apiVersion: {{ include "common.capabilities.cronjob.apiVersion" . }}
kind: CronJob
metadata:
  name: {{ printf "%s-cronjob" (include "common.names.fullname" .) | trunc 63 | trimSuffix "-" }}
  namespace: {{ .Release.Namespace | quote }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  schedule: {{ .Values.cronjob.schedule | quote }}
  suspend: {{ .Values.cronjob.suspend }}
  concurrencyPolicy: {{ .Values.cronjob.concurrencyPolicy }}
  jobTemplate:
    spec:
      template:
        metadata:
          labels: {{- include "common.labels.standard" . | nindent 12 }}
            {{- if .Values.podLabels }}
            {{- include "common.tplvalues.render" ( dict "value" .Values.podLabels "context" $ ) | nindent 12 }}
            {{- end }}
          {{- if .Values.podAnnotations }}
          annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.podAnnotations "context" $ ) | nindent 12 }}
          {{- end }}
        spec:
          {{- include "my-job.imagePullSecrets" . | nindent 10 }}
          serviceAccountName: {{ template "my-job.serviceAccountName" . }}
          automountServiceAccountToken: {{ .Values.serviceAccount.automountServiceAccountToken }}
          hostNetwork: {{ .Values.hostNetwork }}
          hostIPC: {{ .Values.hostIPC }}
          restartPolicy: Never
          {{- if .Values.priorityClassName }}
          priorityClassName: {{ .Values.priorityClassName | quote }}
          {{- end }}
          {{- if .Values.topologySpreadConstraints }}
          topologySpreadConstraints: {{- include "common.tplvalues.render" (dict "value" .Values.topologySpreadConstraints "context" .) | nindent 8 }}
          {{- end }}
          {{- if .Values.podSecurityContext.enabled }}
          securityContext: {{- omit .Values.podSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          initContainers:
            {{- if .Values.initContainers }}
            {{- include "common.tplvalues.render" (dict "value" .Values.initContainers "context" $) | nindent 12 }}
            {{- end }}
          {{- if .Values.affinity }}
          affinity: {{- include "common.tplvalues.render" (dict "value" .Values.affinity "context" $) | nindent 12 }}
          {{- else }}
          affinity:
            podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.podAffinityPreset "context" $) | nindent 14 }}
            podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.podAntiAffinityPreset "context" $) | nindent 14 }}
            nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.nodeAffinityPreset.type "key" .Values.nodeAffinityPreset.key "values" .Values.nodeAffinityPreset.values) | nindent 14 }}
          {{- end }}
          {{- if .Values.nodeSelector }}
          nodeSelector: {{- include "common.tplvalues.render" (dict "value" .Values.nodeSelector "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.tolerations }}
          tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.tolerations "context" $) | nindent 12 }}
          {{- end }}
          containers:
            - name: my-job
              image: {{ template "my-job.image" . }}
              imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
              {{- if .Values.containerSecurityContext.enabled }}
              securityContext: {{- omit .Values.containerSecurityContext "enabled" | toYaml | nindent 16 }}
              {{- end }}

              {{- if .Values.diagnosticMode.enabled }}
              command: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.command "context" $) | nindent 16 }}
              {{- else if .Values.command }}
              command: {{- include "common.tplvalues.render" (dict "value" .Values.command "context" $) | nindent 16 }}
              {{- end }}
              {{- if .Values.diagnosticMode.enabled }}
              args: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.args "context" $) | nindent 16 }}
              {{- else if .Values.args }}
              args: {{- include "common.tplvalues.render" (dict "value" .Values.args "context" $) | nindent 16 }}
              {{- end }}
              {{- if .Values.lifecycleHooks }}
              lifecycle: {{- include "common.tplvalues.render" (dict "value" .Values.lifecycleHooks "context" $) | nindent 16 }}
              {{- end }}
              {{- with .Values.env }}
              env:
                {{- range $name, $value := . }}
                - name: {{ $name }}
                  value: {{ $value | quote }}
                {{- end }}
              {{- end }}
              {{- with .Values.envFrom }}
              envFrom:
                {{- range $secretName := .secrets }}
                - secretRef:
                    name: {{ $secretName }}
                {{- end }}
                {{- range $cmName := .configmaps }}
                - configMapRef:
                    name: {{ $cmName }}
                {{- end }}
              {{- end }}
              {{- if .Values.resources }}
              resources: {{- toYaml .Values.resources | nindent 16 }}
              {{- end }}

              {{- if .Values.volumes }}
              volumeMounts:
                {{- range .Values.volumes }}
                - name: {{ .name }}
                  mountPath: {{ .mountPath }}
                {{- end }}
              {{- end }}
            {{- if .Values.sidecars }}
            {{- include "common.tplvalues.render" ( dict "value" .Values.sidecars "context" $) | nindent 12 }}
            {{- end }}
          {{- if .Values.volumes }}
          volumes:
            {{- $commonName := include "common.names.fullname" . }}
            {{- range .Values.volumes }}
            {{- $volumeName := .name }}
            - name: {{ .name }}

              {{- with .persistence }}
              {{- if .enabled }}
              persistenceVolumeClaim:
                claimName: {{ default (printf "%s-pvc-%s" $commonName $volumeName) .existingClaim }}
              {{- else }}
              emptyDir: {}
              {{- end }}
              {{- end }}

              {{- with .configMap }}
              configMap:
                {{- . | toYaml | nindent 12 }}
              {{- end  }}

              {{- with .secret }}
              secret:
                {{- . | toYaml | nindent 12 }}
              {{- end  }}
            {{- end }}
          {{- end }}
